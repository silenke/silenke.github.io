<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>CSAPP:3e 学习笔记</title>
    <url>/2020/02/08/CSAPP-3e%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p>本文是 CSAPP:3e 的学习笔记。</p>
<hr>
<a id="more"></a>

<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><h3 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h3><p><a href="../WSL的安装与使用/">WSL 的安装与使用</a></p>
<h3 id="配套课程"><a href="#配套课程" class="headerlink" title="配套课程"></a>配套课程</h3><p>本书是 <a href="http://csapp.cs.cmu.edu/3e/home.html" target="_blank" rel="noopener">CMU 15-213</a> 的教材，目前只有 2015 年的视频。</p>
<p><a href="https://www.bilibili.com/video/av31289365" target="_blank" rel="noopener">B站</a> 的视频有中文字幕，不过不全，可以从 <a href="https://www.youtube.com/watch?v=4CpHpFu_KYM&list=PL4YtNpAhVHFJVlaD203_8JkUOUT8RYUhY" target="_blank" rel="noopener">油管</a> 下载缺少的视频，然后手动添加 <a href="https://github.com/EugeneLiu/translationCSAPP" target="_blank" rel="noopener">字幕</a>。</p>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>CSAPP</tag>
      </tags>
  </entry>
  <entry>
    <title>WSL 的安装与使用</title>
    <url>/2020/02/08/WSL%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p>本文介绍如何在 Windows 中安装 WSL，并在 VS Code 中使用。</p>
<a id="more"></a>

<hr>
<p>CSAPP 建议使用 Linux 虚拟机来编译 C/C++ 程序，但是使用不太方便。还好微软推出了 WSL，在很多方面可以代替虚拟机。WSL 是 Windows 的 Linux 子系统，编译 C/C++ 程序比较方便，不用再去安装 MinGW 了。以下步骤主要来自 <a href="https://code.visualstudio.com/docs/cpp/config-wsl" target="_blank" rel="noopener">官网</a>，这里额外增加了一些内容（踩了好多坑啊 T^T）。</p>
<h2 id="安装-WSL"><a href="#安装-WSL" class="headerlink" title="安装 WSL"></a>安装 WSL</h2><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><p>打开 PowerShell（管理员）并运行：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux</span><br></pre></td></tr></table></figure>

<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>在 Microsoft Store 中搜索 <code>Linux</code>，选择自己需要的版本安装，我选择的是 Ubuntu 16.04 LTS。</p>
<h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p>安装完成后，需要初始化。</p>
<p>在开始菜单找到 Ubuntu 并打开，按照提示创建用户。</p>
<h3 id="更换软件源"><a href="#更换软件源" class="headerlink" title="更换软件源"></a>更换软件源</h3><p>Ubuntu 自带的源很慢，需要更换为国内的源。</p>
<p>在 Ubuntu 中输入以下命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /etc/apt/    # 打开软件源存放位置</span><br><span class="line">sudo cp sources.list sources.list.backup # 备份</span><br><span class="line">sudo vim sources.list    # 打开</span><br></pre></td></tr></table></figure>

<p>使用 vim 编辑软件源：</p>
<ul>
<li>输入 <code>:%d</code> 清空文件</li>
<li>按 <code>esc</code> 键，然后输入 <code>i</code> 进入编辑模式</li>
<li>复制下面内容（阿里源）：<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">deb-src http://archive.ubuntu.com/ubuntu xenial main restricted #Added by software-properties</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/xenial main restricted</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/xenial main restricted multiverse universe #Added by software-properties</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/xenial-updates main restricted</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/xenial-updates main restricted multiverse universe #Added by software-properties</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/xenial universe</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/xenial-updates universe</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/xenial multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/xenial-updates multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/xenial-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/xenial-backports main restricted universe multiverse #Added by software-properties</span><br><span class="line">deb http://archive.canonical.com/ubuntu xenial partner</span><br><span class="line">deb-src http://archive.canonical.com/ubuntu xenial partner</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/xenial-security main restricted</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/xenial-security main restricted multiverse universe #Added by software-properties</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/xenial-security universe</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/xenial-security multiverse</span><br></pre></td></tr></table></figure></li>
<li>回到 vim，右键粘贴</li>
<li>按 <code>esc</code> 键，然后输入 <code>:wq</code> 保存并退出</li>
</ul>
<h3 id="安装-GNU-工具"><a href="#安装-GNU-工具" class="headerlink" title="安装 GNU 工具"></a>安装 GNU 工具</h3><p>更新软件列表：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure>

<p>安装 GNU 全套工具（gcc，g++，gdb，make）：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install build-essential</span><br></pre></td></tr></table></figure>

<h2 id="在-VS-Code-中使用"><a href="#在-VS-Code-中使用" class="headerlink" title="在 VS Code 中使用"></a>在 VS Code 中使用</h2><p>现在 WSL 就已经准备好了，我们可以在这里开发 C/C++ 程序，只是没有界面而已。为了使用有图形化界面的编辑器，还需要 VS Code。</p>
<h3 id="打开-VS-Code"><a href="#打开-VS-Code" class="headerlink" title="打开 VS Code"></a>打开 VS Code</h3><p>创建工作目录：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir projects</span><br><span class="line">cd projects</span><br><span class="line">mkdir helloworld</span><br><span class="line">cd helloworld</span><br></pre></td></tr></table></figure>

<p>打开 VS Code：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">code .</span><br></pre></td></tr></table></figure>

<p>现在就可以关闭 Ubuntu 了。当前工作目录是 helloworld，后面所有工作都是在这完成的。</p>
<p><img src="/2020/02/08/WSL%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/open-vscode.png" alt="打开 VSCode"></p>
<h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><p>在左侧的拓展菜单搜索 <code>WSL</code> 并安装。</p>
<p><img src="/2020/02/08/WSL%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/install-wsl-ext.png" alt="安装 WSL 插件"></p>
<p>同样，搜索 <code>C++</code>，选择第一个安装。</p>
<p><img src="/2020/02/08/WSL%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/install-cpp-ext.png" alt="安装 C++ 插件"></p>
<h3 id="下载代码"><a href="#下载代码" class="headerlink" title="下载代码"></a>下载代码</h3><p>CSAPP 中的代码可以从 <a href="http://csapp.cs.cmu.edu/3e/code.html" target="_blank" rel="noopener">官网</a> 获得。</p>
<p>找到下面的终端，这个就是刚才的 Ubuntu，现在可以在这里敲命令。</p>
<p><img src="/2020/02/08/WSL%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/open-bash.png" alt="打开终端"></p>
<p>在终端输入：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget http://csapp.cs.cmu.edu/3e/code.tar</span><br></pre></td></tr></table></figure>

<p>文件会下载到当前目录，然后解包：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar xvf code.tar</span><br></pre></td></tr></table></figure>

<p>至此就可以使用了，在 VS Code 编辑代码，在终端编译调试。</p>
<p><img src="/2020/02/08/WSL%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/start.png" alt="开始使用"></p>
]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>WSL</tag>
        <tag>VS Code</tag>
      </tags>
  </entry>
</search>
